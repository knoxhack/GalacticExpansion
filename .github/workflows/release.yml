name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (format: x.y.z)'
        required: true
        default: ''
      
jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      
      - name: Set up version (tag push)
        if: github.event_name == 'push'
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
      
      - name: Set up version (manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      
      - name: Update version in gradle.properties
        run: |
          VERSION=${{ env.VERSION }}
          sed -i "s/mod_version=.*/mod_version=$VERSION/" gradle.properties
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: |
          export JAVA_HOME="$(dirname $(dirname $(readlink -f $(which java))))"
          ./gradlew clean build
      
      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=""
          
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, use all commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            # Get commits since last tag
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${PREV_TAG}..HEAD --reverse)
          fi
          
          # Create changelog file
          echo "$CHANGELOG" > changes.md
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: Galactic Expansion v${{ env.VERSION }}
          body: |
            ## Galactic Expansion v${{ env.VERSION }}
            
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
          files: |
            core/build/libs/galacticexpansion-${{ env.VERSION }}.jar
            energy/build/libs/galacticexpansion_energy-${{ env.VERSION }}.jar
            machinery/build/libs/galacticexpansion_machinery-${{ env.VERSION }}.jar
            example/build/libs/galacticexpansion_example-${{ env.VERSION }}.jar