plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.78' apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'com.astroframe.galactic.buildstatus'
    id 'com.astroframe.galactic.versioning'
}

allprojects {
    group = project.mod_group_id
    version = project.mod_version
    
    repositories {
        mavenCentral()
        maven { url = 'https://maven.neoforged.net/releases' }
        gradlePluginPortal()
    }
}

// Configure build status widget
buildStatusWidget {
    serverUrl = 'http://localhost:5000'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    apply plugin: 'net.neoforged.moddev'
    apply plugin: 'com.github.johnrengelman.shadow'

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(21))
        }
    }

    dependencies {
        // Common dependencies for all modules
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 21
    }

    tasks.withType(Javadoc).configureEach {
        options.encoding = 'UTF-8'
    }

    // Default configuration for Minecraft mod
    neoForge {
        version = '21.4.135'
        
        parchment {
            mappingsVersion = '2025.03.23'
            minecraftVersion = '1.21.4'
        }

        // Access Transformers
        // accessTransformers = project.file('src/main/resources/META-INF/accesstransformer.cfg')

        runs {
            client {
                client()
                systemProperty 'neoforge.enabledGameTestNamespaces', project.name
            }

            server {
                server()
                programArgument '--nogui'
                systemProperty 'neoforge.enabledGameTestNamespaces', project.name
            }

            gameTestServer {
                type = "gameTestServer"
                systemProperty 'neoforge.enabledGameTestNamespaces', project.name
            }
            
            clientData {
                clientData()
                programArguments.addAll '--mod', project.name, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
            }
            
            configureEach {
                systemProperty 'forge.logging.markers', 'REGISTRIES'
                logLevel = org.slf4j.event.Level.DEBUG
            }
        }
        
        mods {
            "${project.name}" {
                sourceSet(sourceSets.main)
            }
        }
    }

    // Publishing configuration
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://${project.projectDir}/mcmodsrepo"
            }
        }
    }
}
